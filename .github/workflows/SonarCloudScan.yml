name: SonarCloud Scan - Java

on:
  workflow_dispatch:  # Allows manual trigger via GitHub UI
  push:
    branches:
      - main  # Trigger scan on push to the main branch
  pull_request:
    branches:
      - main  # Trigger scan on pull requests targeting the main branch
  schedule:
    - cron: '0 0 * * 1'  # Every Monday at midnight UTC

jobs:
  sonarcloud:
    runs-on: ubuntu-latest  # Use the latest Ubuntu runner

    steps:
      # Step 1: Checkout the repository code
      - name: Checkout Code
        uses: actions/checkout@v3
        # Fetches the repository code for analysis

      # Step 2: Set up Java environment
      - name: Set up JDK 23
        uses: actions/setup-java@v3
        with:
           java-version: '23'
           distribution: 'temurin'

      # Step 3: Cache Maven dependencies
      - name: Cache Maven Dependencies
        uses: actions/cache@v3
        with:
          path: ~/.m2/repository  # Cache Maven dependencies to speed up builds
          key: ${{ runner.os }}-maven-${{ hashFiles('**/pom.xml') }}  # Cache key based on pom.xml
          restore-keys: |
            ${{ runner.os }}-maven-
        # Saves time by caching Maven dependencies across runs

      # Step 4: Build the project
      - name: Build Project
        run: mvn clean install -DskipTests
        # Builds the project, skips tests to avoid redundant tests before SonarCloud scan

      # Step 5: Install SonarScanner CLI
      - name: Install SonarScanner CLI
        run: |
          # Define SonarScanner version
          SONAR_SCANNER_VERSION="5.0.1.3006"
          curl -sSLo sonar-scanner-cli.zip https://binaries.sonarsource.com/Distribution/sonar-scanner-cli/sonar-scanner-cli-${SONAR_SCANNER_VERSION}-linux.zip
          unzip sonar-scanner-cli.zip
          mv sonar-scanner-${SONAR_SCANNER_VERSION}-linux sonar-scanner
          echo "$(pwd)/sonar-scanner/bin" >> $GITHUB_PATH
        # Downloads and installs the specified version of SonarScanner

      # Step 6: Verify SonarScanner Installation
      - name: Verify SonarScanner Installation
        run: sonar-scanner --version
        # Verifies that SonarScanner is installed and accessible

      # Step 7: Run SonarCloud Analysis
      - name: Run SonarCloud Scan
        run: |
          mvn sonar:sonar \
            -Dsonar.projectKey=${{ secrets.SONAR_PROJECT_KEY }} \
            -Dsonar.organization=${{ secrets.SONAR_ORG_KEY }} \
            -Dsonar.host.url=https://sonarcloud.io \
            -Dsonar.token=${{ secrets.SONAR_TOKEN }} \
            -Dsonar.java.binaries=target/classes
        # Analyzes the Java project and uploads results to SonarCloud
